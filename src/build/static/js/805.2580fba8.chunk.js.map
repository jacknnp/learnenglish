{"version":3,"file":"static/js/805.2580fba8.chunk.js","mappings":"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","sources":["components/UI/style.js","helper/speaker.helper.js","hooks/useSpeaker.js","components/DynoDictionary/Favorite/index.js","components/DynoDictionary/Favorite/data.js","pages/FavoriteDictionary.js"],"sourcesContent":["export const gameBoxStyle = (theme) => ({\n  root: {\n    height: '100%',\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    gridTemplateRows: '2fr 1fr 17fr',\n    gridRowGap: '0.8rem',\n\n    [theme.breakpoints.up('sm')]: {\n      height: '85%',\n      gridRowGap: '1.2rem',\n    },\n\n    '& .disabled': {\n      pointerEvents: 'none',\n    },\n  },\n\n  summary: {\n    margin: '1.4rem 0',\n    '& > *': {\n      fontSize: '1.6rem',\n      fontWeight: 400,\n      color: 'var(--label-color)',\n    },\n\n    '& b': {\n      padding: '0 0.4rem',\n      fontSize: '2rem',\n    },\n  },\n\n  summaryIcon: {\n    fontSize: '2.4rem',\n    margin: '0 0.4rem',\n  },\n});\n\nexport const dictionaryRoot = () => ({\n  root: {\n    marginTop: '3.2rem',\n\n    '& ::-webkit-scrollbar': {\n      width: '2px',\n    },\n\n    '& ::-webkit-scrollbar-track': {\n      background: 'none',\n    },\n\n    '& ::-webkit-scrollbar-thumb': {\n      borderRadius: '25px',\n    },\n  },\n\n  contentWrap: {\n    marginTop: '2.4rem',\n  },\n\n  listWrap: {\n    padding: '1.2rem 0.4rem',\n    backgroundColor: 'var(--bg-color-accent)',\n    borderRadius: 'var(--border-radius)',\n    border: 'solid 1px var(--border-color)',\n  },\n\n  list: {\n    padding: '0 2.4rem',\n    height: 'calc(100vh - 24rem)',\n    overflow: 'auto',\n  },\n\n  listItem: {\n    margin: '0.6rem 0',\n  },\n\n  skeleton: {\n    height: '100%',\n\n    '& > *': {\n      margin: '1.2rem 0',\n      height: 'calc(10% - 1.2rem)',\n    },\n  },\n});\n\nexport const dialogMUIRoot = () => ({\n  dialogPaper: {\n    backgroundColor: 'var(--bg-color-sec)',\n  },\n\n  title: {\n    '& > *': {\n      color: 'var(--title-color)',\n    },\n  },\n\n  content: {\n    '& *': {\n      color: 'var(--text-color)',\n    },\n  },\n\n  breakLine: {\n    borderColor: 'var(--border-color)',\n  },\n});\n\nexport const formStyle = () => ({\n  root: {\n    padding: '2.4rem 3.6rem',\n    boxShadow: 'var(--box-shadow)',\n    borderRadius: 'var(--border-radius)',\n    width: '35rem',\n    backgroundColor: 'var(--bg-color-sec)',\n\n    '& > *': {\n      marginTop: '1.2rem',\n      marginBottom: '1.2rem',\n    },\n  },\n\n  title: {\n    fontSize: '2.4rem',\n    color: 'var(--text-color)',\n  },\n\n  labelIcon: {\n    fontSize: '3.6rem',\n    color: 'var(--text-color)',\n  },\n\n  forgotPw: {\n    color: 'var(--title-color)',\n    opacity: 0.65,\n    fontWeight: 500,\n    fontSize: '1.4rem',\n    textAlign: 'right',\n\n    '&:hover': {\n      opacity: 1,\n    },\n  },\n\n  icon: {\n    fontSize: '1.8rem',\n    color: 'var(--grey)',\n    cursor: 'pointer',\n  },\n\n  visiblePw: {\n    color: 'var(--primary-color)',\n  },\n});\n","import correctAudio from 'assets/audios/correct.mp3';\nimport incorrectAudio from 'assets/audios/incorrect.mp3';\n// play an audio\nexport const onPlayAudio = (audioSrc) => {\n  const audio = new Audio(audioSrc);\n  audio.play();\n};\n\n// speak a text\nexport const onTextToSpeech = (text = '', voice, speed = 1, volume = 1) => {\n  let speech = new SpeechSynthesisUtterance();\n  window.speechSynthesis.cancel();\n\n  speech.lang = 'en';\n  speech.text = text;\n  speech.volume = volume;\n  speech.voice = voice;\n  speech.rate = speed;\n\n  window.speechSynthesis.speak(speech);\n};\n\n// play sound effect and read a word\nexport const playSoundAnswer = (\n  word = '',\n  isCorrect = true,\n  voice,\n  volume = 1,\n  speed = 1,\n  speakDelay = 1000,\n) => {\n  const vol = volume >= 0 && volume <= 1 ? volume : 1;\n  const rate = speed >= 0 && speed <= 10 ? speed : 1;\n\n  let audio = new Audio();\n  audio.volume = vol;\n  audio.playbackRate = rate;\n  audio.src = isCorrect ? correctAudio : incorrectAudio;\n  audio.play();\n\n  setTimeout(() => {\n    onTextToSpeech(word, voice, rate, vol);\n  }, speakDelay);\n};\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nlet globalVoices = [];\n\n// get voice in redux\nfunction useSpeaker() {\n  const [voices, setVoices] = useState(globalVoices);\n  const { speed, voiceURI, volume } = useSelector((state) => state.voice);\n  const voice = voices.find((i) => i.voiceURI === voiceURI);\n\n  useEffect(() => {\n    if (globalVoices.length > 0) return;\n\n    const intervalId = setInterval(() => {\n      const voiceList = window.speechSynthesis.getVoices();\n      if (voiceList.length > 0) {\n        globalVoices = voiceList.filter((i) => i.lang.indexOf('en') !== -1);\n        setVoices(voiceList.filter((i) => i.lang.indexOf('en') !== -1));\n        clearInterval(intervalId);\n      }\n    }, 50);\n\n    return () => {\n      intervalId && clearInterval(intervalId);\n    };\n  }, []);\n\n  return { speed, volume, voice };\n}\n\nexport default useSpeaker;\n","import LoopIcon from '@material-ui/icons/Loop';\nimport AutoSearchInput from 'components/UI/AutoSearchInput';\nimport InfiniteScroll from 'components/UI/InfiniteScroll';\nimport WordSortModal from 'components/UI/WordSortModal';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport DynoDictionaryItemData from '../Item/data';\nimport DynoDictionarySkeleton from '../Skeleton';\nimport useStyle from '../style';\n\nfunction FavoriteDictionary({\n  list,\n  loading,\n  onLoadData,\n  more,\n  isFirstLoad,\n  onSortTypeChange,\n  onSearchWord,\n}) {\n  const classes = useStyle();\n\n  return (\n    <div className={`${classes.root} dyno-container`}>\n      {/* title - menu */}\n      <div className=\"flex-center-between\">\n        <h1 className=\"dyno-title\">Từ điển của bạn</h1>\n        <div>\n          <WordSortModal\n            onSelect={onSortTypeChange}\n            classNameIcon=\"dyno-setting-icon mr-5\"\n          />\n        </div>\n      </div>\n      <div className=\"dyno-break\"></div>\n\n      {/* list content */}\n      <div className={classes.contentWrap}>\n        <AutoSearchInput disabled={loading} onSearch={onSearchWord} />\n\n        <div className={`${classes.listWrap} w-100`}>\n          <ul id=\"dictionaryId\" className={`${classes.list} flex-col w-100`}>\n            <>\n              {isFirstLoad ? (\n                <DynoDictionarySkeleton className={classes.skeleton} />\n              ) : (\n                <>\n                  {list && list.length > 0 ? (\n                    <>\n                      {/* render list */}\n                      {list.map((item, index) => (\n                        <li className={classes.listItem} key={index}>\n                          <DynoDictionaryItemData {...item} />\n                        </li>\n                      ))}\n\n                      {/* infinite scrolling */}\n                      {!loading && more && (\n                        <InfiniteScroll\n                          onTouchAnchor={onLoadData}\n                          threshold={1}>\n                          <div className=\"w-100 t-center\">\n                            <LoopIcon className=\"ani-spin\" />\n                          </div>\n                        </InfiniteScroll>\n                      )}\n                    </>\n                  ) : (\n                    // empty list\n                    <h3 className=\"notfound-title h-100 flex-center t-center\">\n                      Bạn chưa đánh dấu từ yêu thích nào cả. Hãy thêm từ yêu\n                      thích bằng cách bấm vào hình trái tim ngay bên từ vựng đó\n                      nhé 😉\n                    </h3>\n                  )}\n                </>\n              )}\n            </>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nFavoriteDictionary.propTypes = {\n  isFirstLoad: PropTypes.bool,\n  isTOEIC: PropTypes.bool,\n  list: PropTypes.array,\n  loading: PropTypes.bool,\n  more: PropTypes.bool,\n  onLoadData: PropTypes.func,\n  onSearchWord: PropTypes.func,\n  onSettingWordPack: PropTypes.func,\n  onSortTypeChange: PropTypes.func,\n};\n\nFavoriteDictionary.defaultProps = {\n  list: [],\n  loading: false,\n  more: true,\n  isFirstLoad: true,\n  isTOEIC: false,\n  onLoadData: function () {},\n  onSearchWord: function () {},\n  onSettingWordPack: function () {},\n  onSortTypeChange: function () {},\n};\n\nexport default FavoriteDictionary;\n","import wordApi from 'apis/wordApi';\nimport WordDetailModal from 'components/UI/WordDetailModal';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport FavoriteDictionary from '.';\n\nconst perPage = 20;\n\nfunction FavoriteDictionaryData() {\n  const [page, setPage] = useState(1);\n  const [sortType, setSortType] = useState('rand');\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const { favoriteList } = useSelector((state) => state.userInfo);\n  const totalPage = favoriteList.length;\n  const preSearchList = useRef([]);\n\n  const nextPage = () => {\n    if (page < totalPage) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n\n  const onSortTypeChange = (type = 'rand') => {\n    if (type === sortType) return;\n    preSearchList.current = [];\n    setSortType(type);\n    setPage(1);\n    setList([]);\n  };\n\n  const onSearchWord = async (word) => {\n    try {\n      if (word === '') {\n        setList(preSearchList.current);\n        setMore(true);\n        return;\n      }\n\n      const apiRes = await wordApi.getSearchWord(word);\n      if (apiRes.status === 200) {\n        const { packList = [] } = apiRes.data;\n        setList(packList);\n        setMore(false);\n      }\n    } catch (error) {}\n  };\n\n  // get favorite list\n  useEffect(() => {\n    let isSub = true;\n\n    (async function () {\n      try {\n        setLoading(true);\n        const apiRes = await wordApi.getUserFavoriteList(\n          page,\n          perPage,\n          sortType,\n        );\n        if (apiRes.status === 200 && isSub) {\n          const { packList = [] } = apiRes.data;\n          const newList = [...list, ...packList];\n          preSearchList.current = newList;\n          setList(newList);\n        }\n      } catch (error) {\n      } finally {\n        if (isSub) {\n          setLoading(false);\n          isFirstLoad && setIsFirstLoad(false);\n        }\n      }\n    })();\n\n    return () => (isSub = false);\n  }, [page, sortType]);\n\n  return (\n    <>\n      <FavoriteDictionary\n        list={list}\n        loading={loading}\n        onLoadData={nextPage}\n        more={more}\n        isFirstLoad={isFirstLoad}\n        onSortTypeChange={onSortTypeChange}\n        onSearchWord={onSearchWord}\n      />\n      <WordDetailModal />\n    </>\n  );\n}\n\nexport default FavoriteDictionaryData;\n","import FavoriteDictionaryData from 'components/DynoDictionary/Favorite/data';\nimport useCloseNavigation from 'hooks/useCloseNavigation';\nimport useTitle from 'hooks/useTitle';\nimport React from 'react';\n\nfunction FavoriteDictionaryPage() {\n  useTitle('Danh sách từ vựng yêu thích');\n  useCloseNavigation();\n\n  return <FavoriteDictionaryData />;\n}\n\nexport default FavoriteDictionaryPage;\n"],"names":["gameBoxStyle","theme","root","height","display","gridTemplateColumns","gridTemplateRows","gridRowGap","breakpoints","up","pointerEvents","summary","margin","fontSize","fontWeight","color","padding","summaryIcon","dictionaryRoot","marginTop","width","background","borderRadius","contentWrap","listWrap","backgroundColor","border","list","overflow","listItem","skeleton","dialogMUIRoot","dialogPaper","title","content","breakLine","borderColor","formStyle","boxShadow","marginBottom","labelIcon","forgotPw","opacity","textAlign","icon","cursor","visiblePw","onPlayAudio","audioSrc","Audio","play","onTextToSpeech","text","voice","speed","volume","speech","SpeechSynthesisUtterance","window","speechSynthesis","cancel","lang","rate","speak","playSoundAnswer","word","isCorrect","speakDelay","vol","audio","playbackRate","src","correctAudio","incorrectAudio","setTimeout","globalVoices","useState","voices","setVoices","useSelector","state","voiceURI","find","i","useEffect","length","intervalId","setInterval","voiceList","getVoices","filter","indexOf","clearInterval","FavoriteDictionary","loading","onLoadData","more","isFirstLoad","onSortTypeChange","onSearchWord","classes","useStyle","className","WordSortModal","onSelect","classNameIcon","AutoSearchInput","disabled","onSearch","id","map","item","index","InfiniteScroll","onTouchAnchor","threshold","Loop","defaultProps","isTOEIC","onSettingWordPack","page","setPage","sortType","setSortType","setLoading","setList","setMore","setIsFirstLoad","totalPage","userInfo","favoriteList","preSearchList","useRef","current","wordApi","apiRes","status","data","packList","isSub","newList","Favorite","type","WordDetailModal","useTitle","useCloseNavigation"],"sourceRoot":""}